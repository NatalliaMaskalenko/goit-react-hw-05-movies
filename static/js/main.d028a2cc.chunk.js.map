{"version":3,"sources":["Components/Navigation/Navigation.module.css","Components/Container/Container.module.css","Components/Container/Container.js","Components/Navigation/Navigation.js","services/moviedbAPI.js","views/HomePage.js","Components/Searchbar/Searchbar.js","views/MoviesPage.js","Components/MovieDetails/MovieDetails.js","views/MovieDetailsPage.js","views/Cast.js","views/Reviews.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Navigation","navigation","exact","to","link","activeClassName","activeLink","BASE_URL","API_KEY","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","HomePage","useState","movies","setMovies","useEffect","then","r","results","map","movie","id","title","Searchbar","onSubmit","name","setName","e","preventDefault","trim","window","alert","value","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","MoviesPage","status","setStatus","moviedbAPI","color","height","width","timeout","MovieDetails","src","poster_path","alt","vote_average","overview","genres","genr","MovieDetailsPage","useRouteMatch","movieId","useParams","setMovie","Cast","actors","setActors","cast","console","log","actor","imagePoster","profile_path","character","Reviews","reviews","setReviews","length","review","author","content","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,WAAa,iC,mBCA3GD,EAAOC,QAAU,CAAC,UAAY,+B,2JCCf,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAChC,OACI,qBAAKC,UAAWC,IAAEC,UAAlB,SACKH,I,qBCKEI,EAPI,kBACf,sBAAKH,UAAYC,IAAEG,WAAnB,UACI,cAAC,IAAD,CAASC,OAAK,EAACC,GAAG,IAAIN,UAAWC,IAAEM,KAAMC,gBAAiBP,IAAEQ,WAA5D,kBACA,cAAC,IAAD,CAASH,GAAG,UAAUN,UAAWC,IAAEM,KAAMC,gBAAiBP,IAAEQ,WAA5D,wB,gCCNFC,EAAQ,+BACRC,EAAU,mC,SAEDC,I,2EAAf,4CAAAC,EAAA,6DAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SAC2BC,MAAMF,EAAKC,GADtC,YACUE,EADV,QAEoBC,GAFpB,iCAGgBD,EAASE,OAHzB,gDAIUC,QAAQC,OAAO,IAAIC,MAAM,cAJnC,mF,wBCGe,SAASC,IAGpB,MAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KAMA,OALAC,qBAAU,WDEHf,EAAuB,GAAD,OAAIF,EAAJ,uCAA2CC,ICDvCiB,MAAK,SAAAC,GAAC,OAAEH,EAAUG,EAAEC,cAClD,IAIC,qCACI,qDACA,6BACKL,GAAUA,EAAOM,KAAI,SAAAC,GAAK,OACvB,6BACI,cAAC,IAAD,CAAM1B,GAAE,kBAAa0B,EAAMC,IAA3B,SAAkCD,EAAME,SADnCF,EAAMC,Y,qBCjBpB,SAASE,EAAT,GAAgC,IAAZC,EAAW,EAAXA,SAC/B,EAAwBZ,mBAAS,IAAjC,mBAAOa,EAAP,KAAaC,EAAb,KAcA,OACI,wBAAQtC,UAAU,YAAlB,SACI,uBAAMoC,SAXO,SAAAG,GACjBA,EAAEC,iBACkB,KAAhBH,EAAKI,OAITL,EAASC,GAHLK,OAAOC,MAAM,oFAQiB3C,UAAU,aAAxC,UACI,uBACI4C,MAAOP,EACPrC,UAAU,mBACV6C,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZX,KAAK,SACLY,SAvBS,SAAAV,GACrBD,EAAQC,EAAEW,cAAcN,MAAMO,kBAwBtB,wBAAQN,KAAK,SAAS7C,UAAU,oBAAhC,SACI,sBAAMA,UAAU,0BAAhB,2BCzBL,SAASoD,IACpB,MAA4B5B,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBF,mBAAS,IAAjC,mBAAOa,EAAP,KAAaC,EAAb,KACA,EAA4Bd,mBAAS,QAArC,mBAAO6B,EAAP,KAAeC,EAAf,KAmBA,OAjBA3B,qBAAU,WACDU,IAILiB,EAAU,WHFX,SAA0BjB,GAC7B,OAAOzB,EAAuB,GAAD,OAAIF,EAAJ,iCAAqCC,EAArC,kBAAsD0B,EAAtD,YGEzBkB,CAA4BlB,GAAMT,MAAK,SAAAC,GAGnC,GAFAH,EAAUG,EAAEC,SACZwB,EAAU,WACA,IAANzB,EACA,OAAOyB,EAAU,eAI1B,CAACjB,IAIA,qCACI,cAACF,EAAD,CAAWC,SAAUE,IACT,SAAXe,GAAqB,6DACV,YAAXA,GAAwB,cAAC,IAAD,CACzBR,KAAK,OACLW,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAEG,YAAXN,GACG,6BACC5B,GAAUA,EAAOM,KAAI,SAAAC,GAAK,OACvB,6BACI,cAAC,IAAD,CAAM1B,GAAE,kBAAa0B,EAAMC,IAA3B,SAAkCD,EAAME,SADnCF,EAAMC,YCvCpB,SAAS2B,EAAT,GAAkC,IAAV5B,EAAS,EAATA,MACrC,OACI,gCACM,qBAAK6B,IAAG,UALH,mCAKG,OAAgB7B,EAAM8B,aAAeC,IAAK/B,EAAME,MAAOlC,UAAU,UACzE,6BAAKgC,EAAME,QACV,6CAAgBF,EAAMgC,aAAtB,QACD,0CACA,4BAAIhC,EAAMiC,WACV,wCACC,6BAAKjC,EAAMkC,OAAOnC,KAAI,SAAAoC,GAAI,OAAI,6BAAmBA,EAAK9B,MAAf8B,EAAKlC,YCR1C,SAASmC,IACpB,IAAOtD,EAAOuD,cAAPvD,IACAwD,EAAWC,cAAXD,QACP,EAA0B9C,mBAAS,MAAnC,mBAAOQ,EAAP,KAAcwC,EAAd,KAOA,OALA7C,qBAAU,YLSP,SAA2B2C,GAC9B,OAAO1D,EAAuB,GAAD,OAAIF,EAAJ,kBAAsB4D,EAAtB,oBAAyC3D,KKTlE4C,CAA6Be,GAAS1C,MAAK,SAAAC,GAAC,OAAI2C,EAAS3C,QAC1D,CAACyC,IAIA,qCACKtC,GAAS,cAAC4B,EAAD,CAAc5B,MAAOA,IAC/B,wDACA,4BAAG,cAAC,IAAD,CAAM1B,GAAE,UAAKQ,EAAL,SAAR,oBACH,4BAAG,cAAC,IAAD,CAAMR,GAAE,UAAKQ,EAAL,YAAR,0BCdA,SAAS2D,IACpB,IAAQH,EAAYC,cAAZD,QACR,EAA4B9C,mBAAS,MAArC,mBAAOkD,EAAP,KAAeC,EAAf,KAUA,OAPAhD,qBAAU,YNYP,SAA0B2C,GAC7B,OAAO1D,EAAuB,GAAD,OAAIF,EAAJ,kBAAsB4D,EAAtB,4BAAiD3D,KMZ1E4C,CAA4Be,GAAS1C,MAAK,SAAAC,GAAC,OAAI8C,EAAU9C,EAAE+C,WAC5D,CAACN,IAGJO,QAAQC,IAAIJ,GAGR,mCACG,6BACMA,GAAUA,EAAO3C,KAAI,SAACgD,GACrB,IAAMC,EAAcD,EAAME,aAAN,UAlBrB,mCAkBqB,OAAmCF,EAAME,cAAgB,uGAE3E,OAAS,+BACL,qBAAKpB,IAAKmB,EAAajB,IAAKgB,EAAO/E,UAAU,UAC7C,4BAAI+E,EAAM1C,OACV,4CAAe0C,EAAMG,eAHPH,EAAM9C,WCpB7B,SAASkD,IACpB,IAAQb,EAAYC,cAAZD,QACR,EAA8B9C,mBAAS,MAAvC,mBAAO4D,EAAP,KAAgBC,EAAhB,KAOC,OALD1D,qBAAU,YPmBP,SAA2B2C,GAC9B,OAAO1D,EAAuB,GAAD,OAAIF,EAAJ,kBAAsB4D,EAAtB,4BAAiD3D,KOnB1E4C,CAA6Be,GAAS1C,MAAK,SAAAC,GAAC,OAAIwD,EAAWxD,EAAEC,cAC9D,CAACwC,IAIA,mCACM,6BACGc,GAA8B,IAAnBA,EAAQE,OACdF,EAAQrD,KAAI,SAAAwD,GAAM,OACpB,+BACI,6BAAKA,EAAOC,SACZ,4BAAID,EAAOE,YAFNF,EAAOtD,OAId,8ECRP,SAASyD,IAOnB,OACD,eAAC5F,EAAD,WAGK,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6F,KAAK,IAAItF,OAAK,EAArB,SACE,cAACkB,EAAD,MAGF,cAAC,IAAD,CAAOoE,KAAK,UAAUtF,OAAK,EAA3B,SACE,cAAC+C,EAAD,MAGF,cAAC,IAAD,CAAOuC,KAAK,wBAAZ,SACE,cAAClB,EAAD,MAGF,cAAC,IAAD,CAAOkB,KAAK,2BAAZ,SACE,cAACR,EAAD,MAGF,cAAC,IAAD,CAAOQ,KAAK,mBAAmBtF,OAAK,EAApC,SACE,cAAC+D,EAAD,MAGF,cAAC,IAAD,UACE,cAAC7C,EAAD,YCvCbqE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACA,cAACJ,EAAD,QAGFK,SAASC,eAAe,W","file":"static/js/main.d028a2cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__6QD7f\",\"link\":\"Navigation_link__33_n9\",\"activeLink\":\"Navigation_activeLink__1zbEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1BuEa\"};","import s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n    return (\r\n        <div className={s.container}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './Navigation.module.css';\r\n\r\nconst Navigation = () => (\r\n    <nav className ={s.navigation}>\r\n        <NavLink exact to='/' className={s.link} activeClassName={s.activeLink}>Home</NavLink>\r\n        <NavLink to='/movies' className={s.link} activeClassName={s.activeLink}>Movies</NavLink>\r\n    </nav>\r\n)\r\n\r\nexport default Navigation;\r\n\r\n\r\n","const BASE_URL = `https://api.themoviedb.org/3`;\r\nconst API_KEY = 'd487c6d6cc7f608fd9f791a1c234621c';\r\n\r\nasync function fetchWithErrorHandling(url = '', config = {}) {\r\n    const response = await fetch(url, config);\r\n    return response.ok\r\n        ? await response.json()\r\n        : Promise.reject(new Error('Not Found'));\r\n};\r\n\r\n\r\nexport  function trendMoviedbAPI() {\r\n    return fetchWithErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\r\n};\r\n\r\nexport function searchMoviedbAPI(name) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${name}&page=1`)\r\n};\r\n\r\nexport function detailsMoviedbAPI(movieId) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\r\n};\r\n\r\nexport function actorsMoviedbAPI(movieId) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\r\n};\r\n\r\nexport function reviewsMoviedbAPI(movieId) {\r\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { Link  } from 'react-router-dom';\r\nimport * as moviedbAPI from '../services/moviedbAPI';\r\n\r\n\r\n\r\nexport default function HomePage() {\r\n    // const math = useRouteMatch();\r\n    // console.log(math);\r\n    const [movies, setMovies] = useState(null);\r\n    useEffect(() => {\r\n        moviedbAPI.trendMoviedbAPI().then(r=>setMovies(r.results));       \r\n    }, []\r\n    );\r\n    \r\n    return (\r\n        <>\r\n            <div>Trending today....</div>\r\n            <ul>\r\n                {movies && movies.map(movie =>\r\n                    <li key={movie.id}>\r\n                        <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n                    </li>)}\r\n            </ul>\r\n        </>\r\n    )\r\n};\r\n\r\n// to={`${url}/${movie.id}`","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Searchbar({onSubmit}) {\r\n    const [name, setName] = useState('');\r\n\r\n    const handleNameChange = e => {\r\n        setName(e.currentTarget.value.toLowerCase())\r\n    };\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (name.trim() === '') {\r\n            window.alert('Введите запрос');\r\n            return;\r\n         }\r\n        onSubmit(name);     \r\n    }   \r\n\r\n    return (\r\n        <header className=\"Searchbar\">\r\n            <form onSubmit={handleSubmit} className=\"SearchForm\">                \r\n                <input\r\n                    value={name}\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search movie\"\r\n                    name=\"search\"\r\n                    onChange={handleNameChange}\r\n                />\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n            </form>\r\n        </header>\r\n    )\r\n};\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { Link  } from 'react-router-dom';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport * as moviedbAPI from '../services/moviedbAPI';\r\nimport Searchbar from '../Components/Searchbar/Searchbar';\r\n\r\nexport default function MoviesPage() {\r\n    const [movies, setMovies] = useState([]);\r\n    const [name, setName] = useState('');\r\n    const [status, setStatus] = useState('init');\r\n    \r\n    useEffect(() => {\r\n        if (!name) {\r\n            return;\r\n        };\r\n\r\n        setStatus('pending');\r\n        moviedbAPI.searchMoviedbAPI(name).then(r => {\r\n            setMovies(r.results);\r\n            setStatus('success');\r\n            if (r === 0) {\r\n                return setStatus('error')\r\n            }\r\n        });\r\n\r\n    }, [name]\r\n    );\r\n        \r\n    return ( \r\n        <>\r\n            <Searchbar onSubmit={setName} />\r\n            {status === 'init' && <h1>Hello! Search something....</h1>}\r\n            {status === 'pending' && <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000} //3 secs\r\n            />}\r\n            {status === 'success' &&\r\n                <ul>\r\n                {movies && movies.map(movie =>\r\n                    <li key={movie.id}>\r\n                        <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n                    </li>)}\r\n                </ul>}\r\n        </>\r\n    )\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst imageUrl = 'https://image.tmdb.org/t/p/w200';\r\n\r\nexport default function MovieDetails({ movie }) {\r\n  return (\r\n      <div>\r\n            <img src={`${imageUrl}${movie.poster_path}`} alt={movie.title} className=\"image\" />\r\n            <h2>{movie.title}</h2>\r\n             <p>User Score: {movie.vote_average}  </p>\r\n            <h2>Overview</h2>\r\n            <p>{movie.overview}</p>\r\n            <h2>Genres</h2>\r\n             <ul>{movie.genres.map(genr => <li key={genr.id}>{genr.name}</li>)}</ul>\r\n        </div>\r\n    )   \r\n};\r\n\r\nMovieDetails.propTypes = {\r\n  movie: PropTypes.object,\r\n};\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { Link, useParams, useRouteMatch } from 'react-router-dom';\r\nimport * as moviedbAPI from '../services/moviedbAPI';\r\nimport MovieDetails from '../Components/MovieDetails'\r\n\r\nexport default function MovieDetailsPage() {\r\n    const {url} = useRouteMatch();\r\n    const {movieId} = useParams();\r\n    const [movie, setMovie] = useState(null);\r\n\r\n    useEffect(() => {\r\n        moviedbAPI.detailsMoviedbAPI(movieId).then(r => setMovie(r));\r\n    }, [movieId]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {movie && <MovieDetails movie={movie} />}\r\n            <h2>Additional information</h2>\r\n            <p><Link to={`${url}/cast`}>Cast</Link></p>\r\n            <p><Link to={`${url}/reviews`}>Reviews</Link></p>\r\n        </>\r\n    )\r\n};","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as moviedbAPI from '../services/moviedbAPI';\r\n\r\nconst imageUrl = 'https://image.tmdb.org/t/p/w200';\r\n\r\nexport default function Cast() {\r\n    const { movieId } = useParams();\r\n    const [actors, setActors] = useState(null);\r\n   \r\n    \r\n    useEffect(() => {\r\n        moviedbAPI.actorsMoviedbAPI(movieId).then(r => setActors(r.cast));\r\n    }, [movieId]\r\n    );\r\n\r\n    console.log(actors);\r\n\r\n    return (\r\n        <>\r\n           <ul>\r\n                {actors && actors.map((actor) =>\r\n                { const imagePoster = actor.profile_path ? `${imageUrl}${actor.profile_path}`: 'https://user-images.githubusercontent.com/24848110/33519396-7e56363c-d79d-11e7-969b-09782f5ccbab.png';\r\n                    \r\n                    return ( <li key={actor.id}>\r\n                        <img src={imagePoster} alt={actor} className=\"image\" />\r\n                        <p>{actor.name}</p>\r\n                        <p>Character: {actor.character}</p>\r\n                    </li>)})}\r\n            </ul>\r\n        </>\r\n    )\r\n};","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as moviedbAPI from '../services/moviedbAPI';\r\n\r\nexport default function Reviews() {\r\n    const { movieId } = useParams();\r\n    const [reviews, setReviews] = useState(null);\r\n\r\n    useEffect(() => {\r\n        moviedbAPI.reviewsMoviedbAPI(movieId).then(r => setReviews(r.results));\r\n    }, [movieId]\r\n    );\r\n\r\n     return (\r\n        <>\r\n              <ul>\r\n                {reviews && reviews.length !== 0\r\n                    ? reviews.map(review =>\r\n                    <li key={review.id}>\r\n                        <h2>{review.author}</h2>\r\n                        <p>{review.content}</p>\r\n                        </li>)\r\n                    : <p>We don`t have any reviews for this movie.</p>}\r\n            </ul>\r\n        </>     \r\n    )\r\n};","// import { useState } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport Container from './Components/Container';\r\nimport Navigation from './Components/Navigation';\r\n\r\n// import Searchbar from './Components/Searchbar';\r\n// import ImageGallery from './Components/ImageGallery';\r\nimport HomePage from './views/HomePage';\r\nimport MoviesPage from './views/MoviesPage';\r\nimport MovieDetailsPage from './views/MovieDetailsPage';\r\nimport Cast from './views/Cast';\r\nimport Reviews from './views/Reviews';\r\n\r\n\r\nexport default function App() {\r\n    // const [name, setName] = useState('');\r\n\r\n//     const handleFormSubmit = name => {\r\n//     setName(name);\r\n//   };\r\n\r\n     return (\r\n    <Container>\r\n      {/* <Searchbar onSubmit={setName} />\r\n      <ImageGallery name={name}/> */}\r\n         <Navigation />\r\n         <Switch>\r\n           <Route path=\"/\" exact>\r\n             <HomePage />\r\n           </Route>\r\n\r\n           <Route path=\"/movies\" exact>\r\n             <MoviesPage />\r\n           </Route>\r\n\r\n           <Route path=\"/movies/:movieId/cast\">\r\n             <Cast />\r\n           </Route>\r\n\r\n           <Route path=\"/movies/:movieId/reviews\">\r\n             <Reviews />\r\n           </Route>\r\n\r\n           <Route path=\"/movies/:movieId\" exact>\r\n             <MovieDetailsPage />\r\n           </Route>\r\n\r\n           <Route>\r\n             <HomePage />\r\n           </Route>\r\n         </Switch>\r\n\r\n    </Container>\r\n        \r\n    );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter> \r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}