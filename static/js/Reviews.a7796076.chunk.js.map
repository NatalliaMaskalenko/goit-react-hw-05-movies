{"version":3,"sources":["views/Reviews.js"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","moviedbAPI","then","r","results","length","map","review","author","content","id"],"mappings":"iOAIe,SAASA,IACpB,IAAQC,EAAYC,cAAZD,QACR,EAA8BE,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAOC,OALDC,qBAAU,WACNC,IAA6BN,GAASO,MAAK,SAAAC,GAAC,OAAIJ,EAAWI,EAAEC,cAC9D,CAACT,IAIA,mCACM,6BACGG,GAA8B,IAAnBA,EAAQO,OACdP,EAAQQ,KAAI,SAAAC,GAAM,OACpB,+BACI,6BAAKA,EAAOC,SACZ,4BAAID,EAAOE,YAFNF,EAAOG,OAId","file":"static/js/Reviews.a7796076.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as moviedbAPI from '../services/moviedbAPI';\r\n\r\nexport default function Reviews() {\r\n    const { movieId } = useParams();\r\n    const [reviews, setReviews] = useState(null);\r\n\r\n    useEffect(() => {\r\n        moviedbAPI.reviewsMoviedbAPI(movieId).then(r => setReviews(r.results));\r\n    }, [movieId]\r\n    );\r\n\r\n     return (\r\n        <>\r\n              <ul>\r\n                {reviews && reviews.length !== 0\r\n                    ? reviews.map(review =>\r\n                    <li key={review.id}>\r\n                        <h2>{review.author}</h2>\r\n                        <p>{review.content}</p>\r\n                        </li>)\r\n                    : <p>We don`t have any reviews for this movie.</p>}\r\n            </ul>\r\n        </>     \r\n    )\r\n};"],"sourceRoot":""}