{"version":3,"sources":["views/Reviews.js","Components/Button/Button.module.css","Components/MovieDetails/MovieDetails.js","Components/Button/Button.js","views/MovieDetailsPage.js"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","moviedbAPI","then","r","results","length","map","review","author","content","id","module","exports","MovieDetails","movie","src","poster_path","alt","title","className","vote_average","overview","genres","genr","name","Button","onClick","s","button","type","MovieDetailsPage","url","useRouteMatch","history","useHistory","location","useLocation","setMovie","push","state","from","to","pathname","fallback","exact","path","Cast"],"mappings":"iOAIe,SAASA,IACpB,IAAQC,EAAYC,cAAZD,QACR,EAA8BE,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAOC,OALDC,qBAAU,WACNC,IAA6BN,GAASO,MAAK,SAAAC,GAAC,OAAIJ,EAAWI,EAAEC,cAC9D,CAACT,IAIA,mCACM,6BACGG,GAA8B,IAAnBA,EAAQO,OACdP,EAAQQ,KAAI,SAAAC,GAAM,OACpB,+BACI,6BAAKA,EAAOC,SACZ,4BAAID,EAAOE,YAFNF,EAAOG,OAId,gF,mBCrBtBC,EAAOC,QAAU,CAAC,OAAS,yB,gICGZ,SAASC,EAAT,GAAkC,IAAVC,EAAS,EAATA,MACrC,OACI,gCACM,qBAAKC,IAAG,UALH,mCAKG,OAAgBD,EAAME,aAAeC,IAAKH,EAAMI,MAAOC,UAAU,UACzE,6BAAKL,EAAMI,QACV,6CAAgBJ,EAAMM,aAAtB,QACD,0CACA,4BAAIN,EAAMO,WACV,wCACC,6BAAKP,EAAMQ,OAAOhB,KAAI,SAAAiB,GAAI,OAAI,6BAAmBA,EAAKC,MAAfD,EAAKb,Y,qBCV1C,SAASe,EAAT,GAA8B,IAAZC,EAAW,EAAXA,QAC5B,OACG,wBAAQP,UAAWQ,IAAEC,OAAQC,KAAK,SAASH,QAASA,EAApD,qB,oBCQO,SAASI,IACpB,IAAOC,EAAOC,cAAPD,IACCpC,EAAYC,cAAZD,QACFsC,EAAUC,cACVC,EAAWC,cACjB,EAA0BvC,mBAAS,MAAnC,mBAAOiB,EAAP,KAAcuB,EAAd,KAEArC,qBAAU,WACNC,IAA6BN,GAASO,MAAK,SAAAC,GAAC,OAAIkC,EAASlC,QAC1D,CAACR,IAOJ,OACI,qCACI,cAAC8B,EAAD,CAAQC,QANI,WAAO,IAAD,IACtBO,EAAQK,KAAR,iBAAaH,QAAb,IAAaA,GAAb,UAAaA,EAAUI,aAAvB,aAAa,EAAiBC,YAA9B,QAAsC,QAMjC1B,GAAS,cAACD,EAAD,CAAcC,MAAOA,IAC/B,wDACA,cAAC,IAAD,CAAM2B,GAAI,CACNC,SAAS,GAAD,OAAKX,EAAL,SACRQ,MAAO,CACHC,KAAML,IAHd,kBAMA,uBACA,cAAC,IAAD,CAAMM,GAAI,CACNC,SAAS,GAAD,OAAKX,EAAL,YACRQ,MAAO,CACHC,KAAML,IAHd,qBAOA,cAAC,WAAD,CAAUQ,SAAS,aAAnB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,wBAAlB,SACI,cAACC,EAAA,QAAD,MAGJ,cAAC,IAAD,CAAQF,OAAK,EAACC,KAAK,2BAAnB,SACI,cAACnD,EAAA,QAAD","file":"static/js/MovieDetailsPage.0c00f486.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as moviedbAPI from '../services/moviedbAPI';\r\n\r\nexport default function Reviews() {\r\n    const { movieId } = useParams();\r\n    const [reviews, setReviews] = useState(null);\r\n\r\n    useEffect(() => {\r\n        moviedbAPI.reviewsMoviedbAPI(movieId).then(r => setReviews(r.results));\r\n    }, [movieId]\r\n    );\r\n\r\n     return (\r\n        <>\r\n              <ul>\r\n                {reviews && reviews.length !== 0\r\n                    ? reviews.map(review =>\r\n                    <li key={review.id}>\r\n                        <h2>{review.author}</h2>\r\n                        <p>{review.content}</p>\r\n                        </li>)\r\n                    : <p>We don`t have any reviews for this movie.</p>}\r\n            </ul>\r\n        </>     \r\n    )\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1QB98\"};","import PropTypes from 'prop-types';\r\n\r\nconst imageUrl = 'https://image.tmdb.org/t/p/w200';\r\n\r\nexport default function MovieDetails({ movie }) {\r\n  return (\r\n      <div>\r\n            <img src={`${imageUrl}${movie.poster_path}`} alt={movie.title} className=\"image\" />\r\n            <h2>{movie.title}</h2>\r\n             <p>User Score: {movie.vote_average}  </p>\r\n            <h2>Overview</h2>\r\n            <p>{movie.overview}</p>\r\n            <h2>Genres</h2>\r\n             <ul>{movie.genres.map(genr => <li key={genr.id}>{genr.name}</li>)}</ul>\r\n        </div>\r\n    )   \r\n};\r\n\r\nMovieDetails.propTypes = {\r\n  movie: PropTypes.object,\r\n};\r\n\r\n","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nexport default function Button({ onClick }) {\r\n     return (\r\n        <button className={s.button} type=\"button\" onClick={onClick}>Go back</button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    handleClick: PropTypes.func,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { lazy, Suspense } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Link, useParams, useRouteMatch } from 'react-router-dom';\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nimport * as moviedbAPI from '../services/moviedbAPI';\r\nimport MovieDetails from '../Components/MovieDetails';\r\nimport Button from '../Components/Button';\r\nimport Cast from './Cast';\r\nimport Reviews from './Reviews';\r\n\r\n\r\nexport default function MovieDetailsPage() {\r\n    const {url} = useRouteMatch();\r\n    const { movieId } = useParams();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const [movie, setMovie] = useState(null);\r\n\r\n    useEffect(() => {\r\n        moviedbAPI.detailsMoviedbAPI(movieId).then(r => setMovie(r));\r\n    }, [movieId]\r\n    );\r\n\r\n    const handleClick = () => {\r\n        history.push(location?.state?.from ?? '/');        \r\n    };\r\n\r\n    return (\r\n        <>            \r\n            <Button onClick={handleClick}/>\r\n            {movie && <MovieDetails movie={movie} />}\r\n            <h2>Additional information</h2>\r\n            <Link to={{\r\n                pathname: `${url}/cast`,\r\n                state: {\r\n                    from: location,                    \r\n                }\r\n            }}>Cast</Link>\r\n            <br/>\r\n            <Link to={{\r\n                pathname: `${url}/reviews`,\r\n                state: {\r\n                    from: location,\r\n                }\r\n            }}>Reviews</Link>\r\n\r\n            <Suspense fallback=\"waiting...\">\r\n                <Switch>\r\n                    <Route exact path=\"/movies/:movieId/cast\">\r\n                        <Cast />\r\n                    </Route>\r\n\r\n                    <Route  exact path=\"/movies/:movieId/reviews\">\r\n                        <Reviews />\r\n                    </Route>\r\n                </Switch>\r\n            </Suspense>\r\n        </>\r\n    )\r\n};\r\n\r\n{/* <Link to={`${url}/cast`}>Cast</Link>\r\n            <br/>\r\n            <Link to={`${url}/reviews`}>Reviews</Link> */}"],"sourceRoot":""}